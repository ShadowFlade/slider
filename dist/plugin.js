(()=>{"use strict";const e=class{on(e,t){this._eventHandlers||(this._eventHandlers={}),this._eventHandlers[e]||(this._eventHandlers[e]=[]),this._eventHandlers[e].push(t)}off(e,t){const s=this._eventHandlers&&this._eventHandlers[e];if(s)for(let e=0;e<s.length;e++)s[e]===t&&s.splice(e--,1)}trigger(e,...t){let s;if(this._eventHandlers&&this._eventHandlers[e])return this._eventHandlers[e].forEach((e=>{const i=e.call(this,...t);return s=i,i})),s}};function t(e,t){return Math.trunc(e/t)}const s=class extends e{constructor(e,t){super(),this.modifiable_options=["width","height","color","background-color","progressBarColor","sliderColor","handleColor","sliderWidth","sliderHeight"],this.interval=new Map,this.coords={main:0,prevMain:0,value:1,prevValue:0,caller:"",clicked:!1,altDrag:!1,target:null,mainMax:0},this.temp={pinTextColor:""},this._settings={className:"slider",orientation:"horizontal",type:"double",stepSize:90,pxPerValue:0,valuePerPx:1,marginLeft:0,marginTop:0,maxValue:1360,minValue:0,maxMinDifference:0,betweenMarkers:40,_maxPins:5,mainMax:200,mainMin:0,valueWidth:0,toolTip:!0,marker:!0,altDrag:!1,built:!1,styles:{progressBarColor:"green",sliderColor:"red",handleColor:"",sliderWidth:5,sliderHeight:200,toolTextColor:"green"}},this._item=t,this.initOptions(e)}initOptions(e){e&&Object.keys(e).forEach((t=>{t in this._settings.styles?this._settings.styles[t]=e[t]:t in this.temp?this.temp[t]=e[t]:this._settings[t]=e[t]})),this.correctOptions()}correctOptions(){this.coords.altDrag=this._settings.altDrag,this.coords.mainMax=this._settings.mainMax,this._settings.maxMinDifference=this._settings.maxValue-this._settings.minValue;const e=this._settings.maxMinDifference;"horizontal"==this._settings.orientation?this._settings.valuePerPx=e/this._settings.mainMax:"vertical"==this._settings.orientation&&(this._settings.valuePerPx=e/this._settings.styles.sliderHeight),this._settings.pxPerValue=this._settings.mainMax/(e/this._settings.stepSize),this.validateOptions()}validateOptions(){("vertical"===this._settings.orientation&&this._settings.styles.sliderWidth>this._settings.styles.sliderHeight||"horizontal"==this._settings.orientation&&this._settings.styles.sliderWidth<this._settings.styles.sliderHeight)&&([this._settings.styles.sliderWidth,this._settings.styles.sliderHeight]=[this._settings.styles.sliderHeight,this._settings.styles.sliderWidth]),this._settings.maxValue<this._settings.minValue&&([this._settings.maxValue,this._settings.minValue]=[this._settings.minValue,this._settings.maxValue])}validate(e){const t=Object.assign({},e),s=this._settings.mainMax,i=this._settings.mainMin,n=this._settings.maxValue,l=this._settings.minValue;return t.main!=s&&(t.main>=s?(t.main=s,t.value=n):t.main<=i&&(t.main=i,t.value=l),t)}renew(e,s,i){this._settings.valuePerPx;const n=this._settings.pxPerValue;this._settings.stepSize;let l=0,o=0;"vertical"==this._settings.orientation?(l=e.y,o=this._settings.marginTop):"horizontal"==this._settings.orientation&&(l=e.x,o=this._settings.marginLeft),this.coords.caller="model";for(const t in e)this.coords[t]=e[t];if(e.clicked){this.coords.main=l-o;const e=this.validate(this.coords);if(e)return this.trigger("coords changed",e,s,i),e}this.coords.main=l-o,this.coords.value=t(this.coords.main,n)*this._settings.stepSize;const r=this.validate(this.coords);if(this.coords.prevMain=this.coords.main,r)return this.trigger("coords changed",r,s,i),r}calcValue(e,s){let i;"horizontal"==this._settings.orientation?i="marginLeft":"vertical"==this._settings.orientation&&(i="marginTop");return{value:t(s-this._settings[i],this._settings.pxPerValue)*this._settings.stepSize,target:e}}calcMain(e,t){let s;s=e%this._settings.stepSize==0?e:this._settings.stepSize*Math.trunc(e/this._settings.stepSize);const i=e*this._settings.pxPerValue/this._settings.stepSize;this.coords.main=i,this.coords.value=s,this.coords.target=t,this.validate(this.coords)&&this.trigger("coords changed",this.coords,this._settings.orientation,this._settings.type)}setOptions(e){this.initOptions(e),this.correctOptions()}getStyles(){return this._settings.styles}getStyle(e){return this._settings.styles[e]}getSetting(e){return this._settings[e]}getSettings(){return this._settings}getItem(){return this._item}};const i=class extends e{constructor(e,t,s){super(),this._elements={_slider:null,_sliderMain:null,_sliderScale:null,_sliderRange:null,_sliderTooltipContainers:[],_sliderHandles:[],_sliderContainer:null,_sliderTooltip:[],_sliderTooltipSticks:[],_sliderPins:[]},this._pres=e,this._item=s}implementStyles(e,t){if(this.initiateOptions(e),this.orientation=t,this._elements._sliderTooltip[0].getBoundingClientRect().left<0){this._elements._sliderContainer.style.justifyContent="space-between",this._elements._sliderContainer.style.flexDirection="row-reverse";this.fetchHTMLEl("slider-min--vertical",!0).style.left="10px",this._elements._sliderTooltipContainers.forEach((e=>{e.style.flexDirection="row",e.style.right="auto",e.style.left="100%",Array.from(this._item.getElementsByClassName("values")).forEach((e=>{e.style.justifyContent="flex-end"}))}))}return{slider:this._elements._slider,range:this._elements._sliderRange,handles:this._elements._sliderHandles,wrapper:this._elements._sliderMain}}showSlider(e,t){const s=this._item.appendChild(e),i=s.getBoundingClientRect().left,n=s.getBoundingClientRect().top,l=s.offsetWidth,o=s.offsetHeight;return{marginLeft:i,marginTop:n,handles:this.fetchHTMLEl("slider-handle",!1),offsetWidth:l,offsetHeight:o}}fetchHTMLEl(e,t,s=this._item){const i=Array.from(s.getElementsByClassName(e));return t?i[0]:i}fetchDivs(e,t){this._elements._sliderMain=this.fetchHTMLEl(`${t}-main`,!0),this._elements._slider=this.fetchHTMLEl(t,!0),this._elements._sliderRange=this.fetchHTMLEl(`${t}-range`,!0),this._elements._sliderHandles=this.fetchHTMLEl(`${t}-handle--${e}`,!1),this._elements._sliderTooltip=this.fetchHTMLEl("tooltip",!1),this._elements._sliderContainer=this.fetchHTMLEl(`${t}-container`,!0),this._elements._sliderScale=this.fetchHTMLEl(`${t}-marker`,!0),this._elements._sliderTooltipContainers=this.fetchHTMLEl("tooltipContainer",!1),this._elements._sliderPins=this.fetchHTMLEl("jsSlider-clickable",!1);const s=Array.from(this._item.getElementsByClassName("jsSlider-clickable")).map((e=>Object.create({div:e,value:e.textContent})));let i;this.valueDivs=s,this.valueDivsArray=s.map((e=>e.value)),i="horizontal"==e?"offsetLeft":"offsetTop";const n=Array.from(this._item.getElementsByClassName("jsOffset")).map((e=>({div:e,offset:e[i]}))),l=n.map((e=>e.offset));this.offsets=n,this.offsetsNums=l}initiateOptions(e){for(const t of Object.keys(e))if("object"==typeof e[t])for(const[s,i]of Object.entries(e[t]))if(t.toString().includes("slider"))this._elements._slider.style[s]=i;else if(t.toString().includes("progressBar"))this._elements._sliderRange.style[s]=i;else if(t.toString().includes("markUp"))this._elements._slider.style[s]=i;else if(t.toString().includes("handle"))for(const e of this._elements._sliderHandles)e.style[s]=i;else if(t.toString().includes("tool"))for(const e of this._elements._sliderTooltip)e.style[s]=i}refreshCoords(e,t,s){const i=e.shiftX,n=this.valueDivsArray;let l,o,r,a,h,d=e.value;"vertical"==t?(a="top",h="height"):"horizontal"==t&&(a="left",h="width"),"single"==s?r=this._elements._sliderHandles[0]:"double"==s&&(r=e.target);const c=this._elements._sliderRange,m=this.fetchHTMLEl("tooltip",!0,r),_=Object.assign(e,{shiftX:i,newLeft:l,pinPoints:n});let g;if(e.clicked){if(o=this.reactOnClick(_,t,s),!o)return!1;l=o.newLeft,g=o.pin}else if(e.altDrag)o=this.reactOnDrag(_,t,s),l=o.newLeft,g=o.pin;else{let{newLeft:i,value:n}=this.pinnedDrag(e,t,s);l=i,d=n}r.style[a]=l+"px","double"==s?this.rangeInterval(t):c.style[h]=l+r.offsetWidth/2+"px",d=function(e){let t;t=e.toString().length>3?(e/1e3).toFixed(1)+"k":e;return t}(d),r.dataset.value=d,m.textContent=d}reactOnDrag(e,t,s){let i,n="0",l="",o=e.newLeft;"horizontal"==t?(n="left",l=e.width,i=e.marginLeft):(n="top",l=e.height,i=e.marginTop);const r=e.target,a=(r.offsetWidth,r.offsetHeight,this._elements._sliderRange);this._elements._sliderTooltip;return 0==e.value&&(a.style[l]="0"),e.altDrag?o=e.main-e.shiftX:o+=r.offsetWidth/2,{newLeft:o,value:undefined}}pinnedDrag(e,t,s){let i,n,l,o="0",r="";const a=this._elements._sliderHandles[0].offsetWidth;"horizontal"==t?(o="left",r=e.width,n=e.marginLeft):(o="top",r=e.height,n=e.marginTop);const h=this.matchHandleAndPin(e.main,t);return l=h.dataset.value,i=h.getBoundingClientRect()[o]-n-a/2,h.className.includes("values")&&(h.className.includes("slider-min")?i=0:h.className.includes("slider-max")&&(i=e.mainMax-a/2)),{newLeft:i,value:l}}reactOnClick(e,t,s){if("double"==s)return!1;const i=this._elements._sliderHandles[0],n=i.offsetWidth,l=e.target.parentElement,o=this.valueDivsArray;let r;const{offset:a,widthOrHeight:h,direction:d,margin:c}=this.convertValues({mainAxis:"x"});if(r=l.getBoundingClientRect()[d]-e[c]-n/2,i.style[d]=r+"px",this._elements._sliderRange.style[h]=r+"px",this._elements._sliderTooltip[0].textContent=e.value,o.includes(e.value))for(const t of this.valueDivs){const s=t;if(s.value==e.value){for(const e of this.valueDivs){e.div.style.color=""}s.div.style.color=String(this._temp.pinTextColor)}}return{newLeft:r,pin:l}}rangeInterval(e){let t,s,i;"horizontal"==e?(t="offsetLeft",s="width",i="left"):"vertical"==e&&(t="offsetTop",s="height",i="top");const n=parseFloat(this._elements._sliderHandles[0].style[i]);let l;l=this._elements._sliderHandles[1]&&parseFloat(this._elements._sliderHandles[1].style[i])||null;const o=Math.abs(n-l),r=Math.min(n,l);this._elements._sliderRange.style[i]=r+"px",this._elements._sliderRange.style[s]=o+this._elements._sliderHandles[0].offsetWidth/2+"px"}showValue(e,t){e.getElementsByClassName("tooltip")[0].textContent=Math.abs(t)}matchHandleAndPin(e,t){let s;const i=this.offsets,n=this.offsetsNums;s="horizontal"==t?"offsetLeft":"offsetTop";let l,o,r=1/0;for(const t of n){const s=Math.abs(e-Number(t));s<r&&(r=s,l=Number(t))}for(const e of i){const t=e;if(l==t.offset)return o=t.div,o}}convertValues(e){for(const[t,s]of Object.entries(e))if("orientation"==t||"mainAxis"==t){let e,t,i,n;return"horizontal"==s||"x"==s?(e="offsetLeft",t="width",i="left",n="marginLeft"):"vertical"!=s&&"y"!=s||(e="offsetTop",t="height",i="top",n="marginTop"),{offset:e,widthOrHeight:t,direction:i,margin:n}}}};const n=class extends e{constructor(e,t){super(),this.pxOptions=["height","width"],this._model=e,this._item=t,this._model.on("settings changed",this.init.bind(this))}getView(e){this._view=e,this._view._temp=this._model.temp,e.on("settingsRequired",this.getSettings.bind(this))}init(){this._model.validateOptions();const e=this._model.getSetting("orientation");let t;"horizontal"==e?t=this._model.getStyle("sliderWidth"):"vertical"==e&&(console.log("fetching for vertical"),t=this._model.getStyle("sliderHeight"));const s=this.convertOptions(this._model.getStyles()),i=this._model.getSettings(),{main:n,container:l,slider:o}=this.makeSlider(i),{marginLeft:r,marginTop:a,handles:h,offsetWidth:d,offsetHeight:c}=this._view.showSlider(n,e);let m,_;if(m=d-h[0].offsetWidth/2,_=h[0].offsetWidth/2,this._model.setOptions({mainMax:m,marginLeft:r,marginTop:a,mainMin:_}),i.marker){const e=this.makeMarker(i,t);l.appendChild(e)}this.fetchDivs(),this._view.implementStyles(s,this._model._settings.orientation),this._model._settings.built=!0}makeSlider(e){const t=this._view._elements;let s,i,n;"horizontal"===e.orientation?(n=this._model.getStyle("sliderWidth"),i="horizontal",s="left"):(i="vertical",n=this._model.getStyle("sliderHeight"),s="top");const l=document.createElement("div");l.classList.add("slider-main");const o=document.createElement("div"),r=document.createElement("div");r.classList.add("slider");const a=document.createElement("div");a.classList.add("slider-range");const h=document.createElement("div");"horizontal"===i?(a.style.width="0px",h.style[s]="0px"):"vertical"===i&&(a.style.height="0px",h.style[s]="0px");const d=document.createElement("div"),c=document.createElement("div");c.className=`tooltipContainer tooltipContainer--${i}`;const m=document.createElement("div");m.className=`tooltipStick tooltipStick--${i}`,c.append(m),this._view._elements._sliderTooltipSticks.push(m),c.append(d),h.append(c);const _=document.createElement("span");_.className="jsOffset values jsSlider-clickable";const g=document.createElement("span");return g.className="jsOffset values jsSlider-clickable",l.append(_),o.append(r),l.append(o),l.append(g),r.appendChild(a),r.appendChild(h),h.className=`slider-handle slider-handle--${i}`,t._sliderHandles.push(h),o.className=`slider-container slider-container--${i}`,d.className=`tooltip tooltip--${i}`,"single"!==e.type&&this.addHandle(h,a,s),_.textContent=String(e.minValue),_.dataset.value=_.textContent,g.textContent=String(e.maxValue),g.dataset.value=g.textContent,_.classList.add(`slider-min--${i}`),g.classList.add(`slider-max--${i}`),l.classList.add(`slider-main--${i}`),{main:l,container:o,slider:r}}makeMarker(e,t){const s=this._model.getSetting("orientation");let i;"horizontal"===s?i="marginLeft":"vertical"===s&&(i="marginTop");const n=document.createElement("div"),{valuesForMarkers:l,majorMarkers:o,altDrag:r,margin:a}=this.calcPins(e,t),h=l;let d=0;for(let t=0;t<l.length-1;t+=1){const l=document.createElement("div");n.append(l);const o=document.createElement("label");if(o.className=`jsSlider-clickable marker-value marker-value--${s}`,n.classList.add(`slider-marker--${s}`),l.className=`jsOffset marker--major marker--major--${s}`,l.style[i]=0==t?a-this._view._elements._sliderHandles[0].offsetWidth/2+"px":a+"px",r){const e=h[d];l.dataset.value=e.toString(),o.dataset.value=e.toString(),o.textContent=e.toString(),l.append(o),d+=1}else{const s=e.stepSize*(t+1);l.dataset.value=s.toString(),o.dataset.value=s.toString(),o.textContent=s.toString(),l.append(o)}}return n.className=`slider-marker slider-marker--${s}`,n}addHandle(e,t,s){let i,n,l;const o=this._view._elements;this._model._settings.type="double",e?(i=e,n=t,l=s):(i=o._sliderHandles[0],n=o._sliderRange);l="horizontal"===this._model.getSettings().orientation?"left":"top";const r=i.cloneNode(!0);r.style[l]="20px";const a=r.getElementsByClassName("tooltipContainer")[0];this._view._elements._sliderTooltipContainers.push(a),i.after(n),n.after(r);const h=this._view.fetchHTMLEl("tooltipStick",!0,r);o._sliderTooltipSticks.push(h),o._sliderHandles.push(r),this._model._settings.built&&(this._view.rangeInterval(this._model._settings.orientation),this.showValue(r))}showValue(e){let t;"horizontal"==this._model._settings.orientation?t="left":"vertical"==this._model._settings.orientation&&(t="top");const s=e.getBoundingClientRect()[t],{value:i,target:n}=this._model.calcValue(e,s);this._view.showValue(n,i)}removeHandle(){const e=this._view._elements;this._model._settings.type="single";const t=this._model._settings.orientation;"horizontal"===t?e._sliderRange.style.left="0px":"vertical"===t&&(e._sliderRange.style.top="0px"),e._sliderHandles[0].before(e._sliderRange),e._sliderHandles[1].remove(),e._sliderHandles=e._sliderHandles.slice(0,1),this._model._settings.built&&this._view.rangeInterval(this._model._settings.orientation)}fetchDivs(){const e=this._model._settings.className,t=this._model._settings.orientation;this._view.fetchDivs(t,e)}calcPins(e,t){let s,i=Math.trunc((e.maxValue-e.minValue)/e.stepSize);t/i<40&&(s=!0,this._model.setOptions({altDrag:s}),i=this._model._settings._maxPins);const n=this._model._settings.maxMinDifference,l=this._model._settings.stepSize,o=(this._model._settings._maxPins,function(e){if(e>0)return e;throw new Error("can not operate with non-positive numbers")}(Math.trunc(n/(l*i)))),r=[];for(let e=o;e<n/l;e+=o){const t=l*e;r.push(t)}return{valuesForMarkers:r,majorMarkers:i,altDrag:s,margin:r[0]/n*t}}convertOptions(e){const t={slider:{width:0,height:0},progressBar:{"background-color":""},handle:{"background-color":""},tool:{color:""}};for(const s in e)if(s.toString().includes("slider")){let i=s.slice(6).toLowerCase();"color"==i&&(i="background-color"),t.slider[i]=e[s],this.pxOptions.includes(i)?t.slider[i]=`${e[s]}px`:t.slider[i]=e[s]}else if(s.toString().includes("progressBar")){let i=s.slice(11).toLowerCase();"color"==i&&(i="background-color"),t.progressBar[i]=e[s],this.pxOptions.includes(i)?t.progressBar[i]=`${e[s]}px`:t.progressBar[i]=e[s]}else if(s.toString().includes("handle")){let i=s.slice(6).toLowerCase();"color"==i&&(i="background-color"),t.handle[i]=e[s],this.pxOptions.includes(i)?t.handle[i]=`${e[s]}px`:t.handle[i]=e[s]}else if(s.toString().includes("tool")){let i=s.slice(4).toLowerCase();"color"==i?i="background-color":"textcolor"==i&&(i="color"),t.tool[i]=e[s],this.pxOptions.includes(i)?t.tool[i]=`${e[s]}px`:t.tool[i]=e[s]}return t}onMouseDown(){const e=this._view._elements._sliderHandles,t=this._view._elements._sliderContainer,s=this._view._elements._slider,i=this._model,n=s.getBoundingClientRect().left,l=s.getBoundingClientRect().top;i.on("coords changed",this.transferData.bind(this));for(const t of e)t.ondragstart=function(){return!1},t.addEventListener("pointerdown",(e=>{e.preventDefault();const s=this._model._settings.orientation,i=this._model._settings.type;if(e.target==t){const o=e.clientX-t.getBoundingClientRect().left,r=t=>{this.transferData({y:t.clientY,x:t.clientX,shiftX:o,marginLeft:n,clicked:!1,marginTop:l,target:e.target},s,i)},a=e=>{document.removeEventListener("pointermove",r),document.removeEventListener("pointerup",a)};document.addEventListener("pointermove",r),document.addEventListener("pointerup",a)}}));t.addEventListener("click",(e=>{const t=e.target,s=this._model._settings.orientation,i=this._model._settings.type;if(t.className.includes("jsSlider-clickable")){const o=t.getElementsByClassName("marker-value")[0]||t;this.transferData({y:e.clientY,x:t.getBoundingClientRect().left,value:o.dataset.value,clicked:!0,target:t,marginLeft:n,marginTop:l},s,i)}}))}transferData(e,t,s){const i=Object.assign({},e);if("model"==i.caller)return i.marginLeft=this._model._settings.marginLeft,i.marginTop=this._model._settings.marginTop,void this._view.refreshCoords(i,t,s);this._model.renew(i,t,s)}setValue(e,t){const s=this._view._elements;let i;if(1==t)i=s._sliderHandles[0];else if(2==t){if("double"!=this._model._settings.type)throw new ReferenceError("Can not reference absent handle");i=s._sliderHandles[1]}this._model.calcMain(e,i)}getSettings(){return this._model.getSettings()}};const l=class{constructor(e,t){this._item=e,this._model=new s(t,e),this._pres=new n(this._model,this._model.getItem()),this._view=new i(this._pres,t,e),this._pres.getView(this._view),this._pres.init(),this._pres.onMouseDown()}tilt(){"vertical"==this._model.getSettings().orientation?this._model._settings.orientation="horizontal":"horizontal"==this._model.getSettings().orientation&&(this._model._settings.orientation="vertical"),this._pres.init(),this._pres.onMouseDown()}scale(e){this._view._elements._sliderScale.style.display=e?"":"none"}bar(e){this._view._elements._sliderRange.style.display=e?"":"none"}tip(e){e?this._view._elements._sliderTooltipContainers.forEach((e=>{e.style.display=""})):this._view._elements._sliderTooltipContainers.forEach((e=>{e.style.display="none"}))}range(e){e?"double"!=this._model._settings.type&&(this._model._settings.type="double",this._pres.addHandle(),this._pres.onMouseDown()):(this._model._settings.type="single",this._pres.removeHandle())}setValue(e,t){this._pres.setValue(e,t)}setLimits(e,t){this._model._settings.maxValue=t,this._model._settings.minValue=e,this._pres.init(),this._pres.onMouseDown()}isRange(){return"double"==this._model._settings.type}setStep(e){this._model._settings.stepSize=Number(e),this._pres.init(),this._pres.onMouseDown()}noStick(e){}changeStyles(e){const t=e.className;let s="vertical",i=s.length,n=t.indexOf(s);if(t.includes(s)){const s=t.slice(0,n).concat("horizontal").concat(t.slice(n+i));e.className=s}}};$.fn.slider=function(e){return this.each((function(){const t=new l(this,e);$.fn.slider.tilt=()=>($(this).html(""),t.tilt(),this),$.fn.slider.scale=e=>(t.scale(e),this),$.fn.slider.bar=e=>(t.bar(e),this),$.fn.slider.tip=e=>(t.tip(e),this),$.fn.slider.range=e=>(t.range(e),this),$.fn.slider.setValue=(e,s)=>(t.setValue(e,s),this),$.fn.slider.setLimits=(e,s)=>($(this).html(""),t.setLimits(e,s),this),$.fn.slider.isRange=()=>(t.isRange(),this),$.fn.slider.setStep=e=>($(this).html(""),t.setStep(e),this),$.fn.slider.noStick=e=>(t.noStick(e),this)}))};$("#slider").slider({className:"slider",orientation:"horizontal",type:"single",stepSize:90,pxPerValue:0,valuePerPx:1,marginLeft:0,marginTop:0,maxValue:400,minValue:0,mainMin:0,toolTip:!0,marker:!0,progressBarColor:"brown",sliderColor:"red",sliderWidth:5,sliderHeight:200,pinTextColor:"green",toolTextColor:"red"})})();